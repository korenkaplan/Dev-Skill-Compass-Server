"""A module that holds Tech names in lists"""
from collections import defaultdict

_tech = {
    'programming_languages_expanded': [
        'javascript', 'js',
        'html', 'hypertext markup language',
        'css', 'cascading style sheets',
        'python', 'py',
        'sql', 'structured query language',
        'typescript', 'ts',
        'bash',
        'shell', 'shell script',
        'java',
        'c#', 'csharp', 'c-sharp',
        'c++', 'cpp', 'c plus plus',
        'c',
        'php',
        'powershell', 'pws',
        'go', 'golang',
        'rust',
        'kotlin',
        'ruby',
        'lua',
        'dart',
        'assembly', 'asm',
        'swift',
        'r',
        'visual basic (.net)', 'vb.net', 'vb',
        'matlab',
        'vba', 'visual basic for applications',
        'groovy',
        'delphi', 'object pascal',
        'scala',
        'perl', 'practical extraction and report language',
        'elixir',
        'objective-c', 'obj-c', 'objc',
        'haskell',
        'gdscript', 'godot script',
        'lisp',
        'solidity',
        'clojure', 'clj',
        'julia',
        'erlang',
        'f#', 'fsharp', 'f-sharp',
        'fortran',
        'prolog',
        'zig',
        'ada',
        'ocaml', 'objective caml',
        'apex',
        'cobol', 'common business-oriented language',
        'sas', 'statistical analysis system',
        'crystal',
        'nim',
        'apl', 'a programming language',
        'flow',
        'raku', 'perl 6'
    ],
    'databases_expanded': [
        'postgresql', 'postgres', 'pgsql',
        'mysql', 'my sql',
        'sqlite', 'sqlite3',
        'mongodb', 'mongo',
        'microsoft sql server', 'mssql', 'ms sql server', 'sql server',
        'redis',
        'mariadb', 'maria db',
        'elasticsearch', 'elastic search', 'es',
        'oracle', 'oracle db',
        'dynamodb', 'dynamo',
        'firebase realtime database', 'firebase rtdb',
        'cloud firestore', 'firestore',
        'bigquery', 'big query', 'bq',
        'microsoft access', 'ms access',
        'h2', 'h2 database',
        'cosmos db', 'azure cosmos db',
        'supabase',
        'influxdb', 'influx',
        'cassandra',
        'snowflake',
        'neo4j', 'neo 4j',
        'ibm db2', 'db2',
        'solr', 'apache solr',
        'firebird',
        'couchdb', 'couch db',
        'clickhouse',
        'cockroachdb', 'cockroach db',
        'couchbase',
        'duckdb', 'duck db',
        'datomic',
        'ravendb', 'raven db',
        'tidb', 'ti db'
    ],
    'cloud_platforms_expanded': [
        'amazon web services (aws)', 'aws', 'amazon aws',
        'microsoft azure', 'azure',
        'google cloud', 'gcp', 'google cloud platform',
        'firebase',
        'cloudflare',
        'digital ocean', 'digitalocean',
        'heroku',
        'vercel',
        'netlify',
        'vmware',
        'hetzner',
        'linode', 'now akamai', 'akamai',
        'managed hosting',
        'ovh',
        'oracle cloud infrastructure (oci)', 'oci', 'oracle cloud',
        'openshift',
        'fly.io', 'fly io',
        'vultr',
        'render',
        'openstack',
        'ibm cloud or watson', 'ibm cloud', 'watson',
        'scaleway',
        'colocation', 'colo'
    ],
    'web_frameworks_expanded': [
        'node.js', 'nodejs', 'node',
        'react', 'react.js', 'reactjs',
        'jquery',
        'express',
        'angular', 'angular.js', 'angularjs',
        'next.js', 'nextjs', 'next',
        'asp.net core', 'aspnet core', 'aspnetcore', 'dotnet core', '.net core',
        'vue.js', 'vuejs', 'vue',
        'wordpress',
        'asp.net', 'aspnet',
        'flask',
        'spring boot', 'springboot',
        'django',
        'laravel',
        'fastapi',
        'svelte',
        'ruby on rails', 'rails', 'ror',
        'nestjs', 'nest.js', 'nest',
        'blazor',
        'nuxt.js', 'nuxtjs', 'nuxt',
        'symfony',
        'deno',
        'gatsby',
        'fastify',
        'phoenix',
        'drupal',
        'codeigniter',
        'solid.js', 'solidjs', 'solid',
        'remix',
        'elm',
        'play framework',
        'lit',
        'qwik'
    ],
    'other_frameworks_expanded': [
        'scikit-learn', 'scikit', 'sklearn',
        'flutter',
        'torch/pytorch', 'torch', 'pytorch',
        'react native', 'react-native',
        'opencv',
        'electron',
        'opengl',
        'qt',
        'cuda',
        'keras',
        'apache spark', 'spark',
        'swiftui', 'swift ui',
        'xamarin',
        'ionic',
        'hugging face transformers', 'transformers',
        'gtk',
        'cordova',
        '.net maui', 'maui',
        'hadoop',
        'tauri',
        'capacitor',
        'tidyverse',
        'quarkus',
        'ktor',
        'mfc',
        'jax',
        'micronaut',
        'uno platform'
    ],
    'other_tools_expanded': [
        'docker',
        'npm',
        'pip',
        'homebrew',
        'yarn',
        'webpack',
        'makefile',
        'kubernetes', 'k8s',
        'nuget',
        'maven (build tool)', 'maven',
        'gradle',
        'vite',
        'cmake',
        'cargo',
        'gnu gcc', 'gcc',
        'terraform',
        'msbuild',
        'ansible',
        'chocolatey',
        'composer',
        "llvm's clang", 'clang',
        'apt',
        'unity 3d', 'unity3d',
        'pacman',
        'pnpm',
        'msvc',
        'podman',
        'ninja',
        'unreal engine', 'unrealengine',
        'godot',
        'ant',
        'google test', 'gtest',
        'nix',
        'meson',
        'qmake',
        'puppet',
        'dagger',
        'chef',
        'catch2',
        'pulumi',
        'bun',
        'wasmer',
        'doctest',
        'scons',
        'bandit',
        'cppunit',
        'boost.test', 'boost test',
        'build2',
        'tunit',
        'lest',
        'snitch',
        'cute',
        'elfspy',
        'liblittletest'
    ],
    'integrated_development_environment_expanded': [
        'visual studio solution', 'visual studio code', 'vs code', 'visual studio', 'intellij idea', 'intellij',
        'notepad++',
        'notepad plus plus', 'vim', 'android studio', 'android-studio', 'pycharm', 'sublime text', 'neovim', 'neo vim',
        'eclipse', 'xcode', 'nano', 'webstorm', 'web storm', 'phpstorm',
        'atom', 'rider', 'datagrip', 'data grip', 'clion', 'ipython', 'ipy', 'emacs', 'vscodium', 'vs codium', 'goland',
        'go land', 'netbeans', 'rstudio', 'r studio', 'code::blocks', 'code blocks', 'qt creator',
        'rad studio (delphi, c++ builder)', 'rad studio', 'fleet', 'helix', 'kate', 'spyder', 'rubymine', 'ruby mine',
        'geany', 'bbedit', 'bb edit', 'textmate', 'micro', 'nova', 'condo'
    ],
    'async_tools_expanded': [
        'confluence', 'markdown file', 'markdown', 'trello', 'notion', 'github discussions',
        'azure devops', 'miro', 'wikis', 'asana', 'clickup', 'doxygen', 'redmine', 'monday.com',
        'stack overflow for teams', 'stack overflow', 'youtrack', 'microsoft planner', 'microsoft lists', 'smartsheet',
        'shortcut', 'wrike', 'adobe workfront', 'redocly', 'document360', 'nuclino', 'swit', 'dingtalk (teambition)',
        'dingtalk', 'tettra', 'workzone', 'planview projectplace or clarizen', 'planview projectplace', 'clarizen',
        'wimi', 'cerri', 'leankor'
    ],
    'synchronous_tools_expanded': [
        'microsoft teams', 'slack', 'zoom', 'discord', 'google meet', 'whatsapp', 'telegram', 'skype',
        'signal', 'google chat', 'cisco webex teams', 'webex teams', 'mattermost', 'jitsi', 'matrix', 'irc',
        'rocketchat', 'zulip', 'ringcentral', 'symphony', 'wire', 'wickr', 'unify circuit', 'coolfire core'
    ],
    'version_control_tech_expanded': [
        "git",
        "subversion (svn)", "svn",
        "mercurial", "hg",
        "perforce", "p4",
        "team foundation version control (tfvc)", "tfvc",
        "bazaar",
        "cvs (concurrent versions system)", "cvs",
        "bitbucket",
        "apache subversion",
        "github",
        "gitlab",
        "aws codecommit", "codecommit"
    ],
    'data_analyst_tools_expanded': [
        "excel",
        "tableau",
        "power bi",
        "google data studio",
        "qlikview",
        "qliksense",
        "looker",
        "seaborn",
        "plotly",
        "pandas",
        "numpy",
        "scipy",
        "spss",
        "stata",
        "jupyter notebook", "jupyter", "notebook",
        "google sheets", "google spreadsheet", "sheets",
        "redash",
        "metabase",
        "apache superset", "superset"
    ],
    'testing_and_qa_tools': [
        "jenkins",
        "travis ci",
        "circleci",
        "gitlab ci",
        "github actions",
        "teamcity",
        "bamboo",
        "azure pipelines",
        "drone",
        "concourse",
        "codeship",
        "bitbucket pipelines",
        "testrail",
        "jira",
        "zephyr",
        "practitest",
        "testlink",
        "selenium webdriver", "webdriver", "selenium",
        "appium",
        "testng",
        "test::unit",
        "unittest",
        "cucumber",
        "postman",
        "soapui",
        "rest-assured",
        "newman",
        "karate dsl",
        "blazemeter",
        "testim",
        "mabl",
        "ranorex",
        "webdriverio",
        "cypress",
        "jasmine",
        "mocha",
        "pytest",
        "junit",
        "robot framework",
        "tricentis tosca",
        "loadrunner",
        "gatling",
        "locust",
        "applitools eyes",
        "percy",
        "backstopjs",
        "galen framework",
        "wraith"
    ],
    'data_exchange_apis_and_tools_expanded': [
        "json",
        "xml",
        "restful", "rest api", "rest",
        "soap",
        "graphql",
        "protobuf",
        "protocol buffers",
        "avro",
        "thrift",
        "grpc",
        "odata",
        "hal",
        "hypertext application language",
        "json-ld",
        "linked data",
        "swagger",
        "openapi specification",
        "raml",
        "restful api modeling language",
        "oas",
        "insomnia"
    ],
    'messaging_queues_tech_expanded': [
        "mqtt",
        "amqp",
        "rabbitmq",
        'apache kafka', 'kafka',
        "apache activemq",
        "amazon sqs",
        "google cloud pub/sub",
        "gcp pub/sub",
        "azure service bus",
        "redis pub/sub",
        "zeromq",
        "nats",
        "ibm mq",
        "rocketmq",
        "nsq",
        "beanstalkd"
    ],
    'methodologies_expanded': [
        "waterfall",
        "agile",
        "scrum",
        "kanban",
        "extreme programming (xp)",
        "xp",
        "lean",
        "devops",
        "ci/cd",
        "continuous deployment",
        "spiral",
        "rapid application development (rad)",
        "rad",
        "feature driven development (fdd)",
        "fdd",
        "dynamic systems development method (dsdm)",
        "dsdm",
        "six sigma",
        "prince2",
        "itil (information technology infrastructure library)",
        "itil",
        "scaled agile framework (safe)",
        "disciplined agile (da)"
    ],
    'code_architecture_expanded': [
        "design patterns",
        "software architecture",
        "clean code",
        "modular design",
        "component-based architecture",
        "microservices",
        "monolithic",
        "event-driven",
        "soa",
        "layered",
        "hexagonal",
        "ddd",
        "mvc", "model view controller",
        "mvvm", "model view view model",
        "dependency injection",
        "ioc", "inversion of control",
        "srp", "single responsibility principle",
        "ocp", "open/closed principle",
        "lsp", "liskov substitution principle",
        "isp", "interface segregation principle",
        "dip", "dependency inversion principle"
    ],
    'top_libraries_expanded': [
        # Python
        "matplotlib",
        "tensorflow",
        "requests",
        "beautifulsoup4", "bs4",
        "sqlalchemy",
        "nltk",
        "spacy",
        "opencv-python",
        "scrapy",
        "lxml",
        "pyppeteer",
        "celery",
        "wTForms",
        "marshmallow",
        "nose",
        "coverage",
        "tox",
        "mypy",
        "pylint",
        "flake8",

        # JavaScript
        "axios",
        "babel",
        "lodash",
        "moment",
        "gulp",
        "grunt",
        "rollup",
        "socket.io",
        "rxjs",
        "redux",
        "vuex",

        # Java
        "spring-boot",
        "hibernate",
        "log4j",
        "guava",
        "gson",
        "apache-commons",
        "jackson",
        "slf4j",
        "lombok",
        "jpa",

        # C#
        "entity-framework",
        "nunit",
        "moq",
        "nlog",
        "log4net",
        "newtonsoft-json",
        "dapper",
        "serilog",
        "signalr",
        "automapper",
        "castle-windsor",
    ],
    'protocols': [
        "http", "https", "ftp", "sftp", "ssh", "smtp", "imap", "pop3", "tcp", "udp", "ip", "ssl", "tls", "ws", "wss"
    ],
    'amazon_tech': [
        "ec2",
        "ec3",
        "s3",
        "lambda",
        "rds",
        "dynamodb",
        "elastic beanstalk",
        "ecs",
        "eks",
        "fargate",
        "cloudformation",
        "cloudwatch",
        "iam",
        "vpc",
        "route 53",
        "api gateway",
        "elasticsearch service",
        "redshift",
        "athena",
        "glue",
        "kinesis",
        "sqs",
        "sns",
        "ses",
        "cognito",
        "step functions",
        "appsync",
        "codedeploy",
        "codepipeline",
        "x-ray",
        "aurora",
        "transcribe",
        "comprehend",
        "rekognition",
        "polly",
        "lex",
        "translate",
        "forecast",
        "personalize",
        "textract",
        "iot"
    ],
    'operating_systems': [
        "linux",
        "ubuntu",
        "centos",
        "redhat",
        "debian",
        "fedora",
        "windows",
        "macos",
        "ios",
        "android"
    ],
    'general_phrases': ['etl', 'data warehouse', 'columnar database', 'columnar databases', 'ux/ui', 'ui/ux', 'ci/cd', 'ci/cd pipelines']
}


def get_tech_set():
    tech_set = set()
    for key in _tech:
        tech_set.update(_tech[key])
    return tech_set


def get_tech_dict():
    return _tech


def find_duplicate_words_with_lists(dictionary):
    # Create a dictionary to store word counts and associated lists
    word_counts = {}

    # Iterate through each list in the dictionary
    for list_name, word_list in dictionary.items():
        # Iterate through each word in the list
        for word in word_list:
            # If the word is already in the word_counts dictionary, update its count and add the list name
            if word in word_counts:
                word_counts[word]['count'] += 1
                word_counts[word]['lists'].append(list_name)
            # Otherwise, initialize the count for the word and store the list name
            else:
                word_counts[word] = {'count': 1, 'lists': [list_name]}

    # Filter the word counts to get only the duplicates
    duplicate_counts = {word: info for word, info in word_counts.items() if info['count'] > 1}

    # Return the dictionary of duplicate word counts with associated lists
    return duplicate_counts


def find_word_in_dict(word):
    result = []
    for key, value_list in _tech.items():
        if word.lower() in map(str.lower, value_list):
            result.append(key)
    return result if result else None


# Example usage:
# multi_word_phrasess = get_multi_word_phrases(_tech)
# print(sorted(multi_word_phrasess))

# Example usage
# duplicate_counts_with_lists = find_duplicate_words_with_lists(_tech)
# print("Duplicate word counts with associated lists:", duplicate_counts_with_lists)
